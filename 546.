class Solution:
    def removeBoxes(self, boxes: List[int]) -> int:
        n = len(boxes)
        from functools import lru_cache

        @lru_cache(None)
        def dp(l: int, r: int, k: int) -> int:
            if l > r:
                return 0

            rr, kk = r, k
            while rr > l and boxes[rr] == boxes[rr - 1]:
                rr -= 1
                kk += 1

            res = dp(l, rr - 1, 0) + (kk + 1) * (kk + 1)

            for i in range(l, rr):
                if boxes[i] == boxes[rr]:
                    res = max(res, dp(l, i, kk + 1) + dp(i + 1, rr - 1, 0))

            return res

        return dp(0, n - 1, 0)
