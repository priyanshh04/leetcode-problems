class Solution {
    public boolean checkSubarraySum(int[] nums, int k) {
         int n = nums.length;
        if (k == 0) {
            for (int i = 0; i + 1 < n; i++) {
                if (nums[i] == 0 && nums[i+1] == 0) return true;
            }
            return false;
        }

        Map<Integer, Integer> remIndex = new HashMap<>();
        remIndex.put(0, -1);
        int prefix = 0;

        for (int i = 0; i < n; i++) {
            prefix += nums[i];
            int rem = ((prefix % k) + k) % k;
            if (remIndex.containsKey(rem)) {
                int prev = remIndex.get(rem);
                if (i - prev >= 2) return true;
            } else {
                remIndex.put(rem, i);
            }
        }
        return false;
    }
}
